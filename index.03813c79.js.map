{"mappings":"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","sources":["src/VacasToros.js","src/funcionesJuegoVacasToros.js","src/excepcionesVacasToros.js","src/presenter.js","src/vistas.js"],"sourcesContent":["import FuncionesDeJuego from \"./funcionesJuegoVacasToros.js\";\nimport ExcepcionesVacasToros from \"./excepcionesVacasToros.js\";\n\nclass VacasToros\n{\n    constructor()\n    {\n        this.numeroCaracteres;\n        this.numeroIntentos;\n        this.tipoDeCodigo;\n        this.generarCodigoAutomatico;\n        this.intentosRealizados;\n        this.codigoSecreto = [];\n        this.intentoCodigo = [];\n        this.resultadoDeIntento = [];\n        this.Excepciones = new ExcepcionesVacasToros();\n        this.FuncionesJuego = new FuncionesDeJuego();\n    }\n\n    definirNumeroDeCaracteres(numeroCar)\n    {\n        numeroCar = this.Excepciones.controlarCantidadDeCaracteres(numeroCar);\n        this.numeroCaracteres = numeroCar;\n    }\n    \n    definirNumeroDeIntentos(numeroInt)\n    {\n        numeroInt = this.Excepciones.controlarCantidadDeIntentos(numeroInt);\n        this.numeroIntentos = numeroInt;\n    }\n\n    definirTipoDeCodigo(tipoCod)\n    {\n        this.tipoDeCodigo = tipoCod;\n    }\n\n    definirGeneracionDeCodigoAutomatico(genAutomatico)\n    {\n        this.generarCodigoAutomatico = genAutomatico;\n    }\n\n    definirCodigoSecretoPorDefault()\n    {\n        this.codigoSecreto = this.FuncionesJuego.generarCodigoSecretoPorDefault(this.numeroCaracteres, this.tipoDeCodigo, this.generarCodigoAutomatico);\n    }\n\n    definirCodigoSecreto(codigoSec)\n    {\n        codigoSec = this.FuncionesJuego.convertirCodigoSecretoMayusculas(codigoSec);\n        codigoSec = this.Excepciones.controlarCodigoSecreto(codigoSec, this.numeroCaracteres, this.tipoDeCodigo); \n        this.codigoSecreto = codigoSec;\n    }\n\n    definirIntentosRealizados()\n    {\n        this.intentosRealizados = this.FuncionesJuego.generarIntentosRealizados(this.numeroIntentos);\n    }\n\n    definirConfiguracionTotal(nroCaracteres, numeroInt, tipCodigo, genAutomatico)\n    {\n        this.definirNumeroDeCaracteres(nroCaracteres);\n        this.definirNumeroDeIntentos(numeroInt);\n        this.definirTipoDeCodigo(tipCodigo);\n        this.definirGeneracionDeCodigoAutomatico(genAutomatico);\n        this.definirCodigoSecretoPorDefault();\n        this.definirIntentosRealizados();\n    }\n\n    definirIntento(intentoCodigo)\n    {\n        intentoCodigo = this.FuncionesJuego.convertirCodigoSecretoMayusculas(intentoCodigo);\n        this.intentoCodigo = intentoCodigo;\n        this.definirResultadoDeIntento();\n        this.definirIntentosRealizados();\n    }\n\n    definirResultadoDeIntento()\n    {\n        this.resultadoDeIntento = this.Excepciones.controlarCodigoSecreto(this.intentoCodigo, this.numeroCaracteres, this.tipoDeCodigo);\n        this.resultadoDeIntento = this.FuncionesJuego.generarResultadoDeIntento(this.numeroCaracteres, this.resultadoDeIntento, this.codigoSecreto, this.intentoCodigo);\n    }\n\n    getNumeroDeCaracteres()\n    {\n        return this.numeroCaracteres;\n    }\n    \n    getNumeroDeIntentos()\n    {\n        return this.numeroIntentos;\n    }\n\n    getTipoDeCodigo()\n    {\n        return this.tipoDeCodigo;\n    }\n\n    getCodigoSecreto()\n    {\n        return this.codigoSecreto;\n    }\n\n    getResultadoDeIntento()\n    {\n        return this.resultadoDeIntento;\n    }\n\n    getIntentosRealizados()\n    {\n        return this.intentosRealizados;\n    }\n\n    comprobarJuego()\n    {\n        return this.FuncionesJuego.comprobarGanador(this.numeroCaracteres, this.numeroIntentos);\n    }\n}\n\nexport default VacasToros;\n","class FuncionesDeJuego\n{\n    constructor()\n    {\n        this.numeroIntentosRealizados;\n        this.numeroToros = 0;\n        this.codigoSecretoAutomatico = [];\n        this.listaRepetidos = [];\n    }\n\n    convertirCodigoSecretoMayusculas(codigoSec)\n    {\n        for(var i = 0; i < codigoSec.length; i++)\n        {\n            codigoSec[i] = codigoSec[i].toString().toUpperCase();\n        }\n        return codigoSec;\n    }\n    \n    generarCaracterNumerico()\n    {\n        return (Math.floor(Math.random() * 10)).toString();\n    }\n\n    generarCaracterLetra()\n    {\n        const alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n        return alphabet[Math.floor(Math.random() * alphabet.length)]\n    }\n\n    generarCaracterLetraNumero()\n    {\n        let letraNumero = Math.floor(Math.random() * 2);\n        if(letraNumero == 0)\n        {\n            return this.generarCaracterLetra();\n        }\n        return this.generarCaracterNumerico();\n    }\n\n    generarCodigoSecretoAut(numeroCaracteres, tipoCodigo)\n    {\n        this.codigoSecretoAutomatico = [];\n        let caracter;\n        for(var i = 0; i < numeroCaracteres; i++)\n        {\n            switch(tipoCodigo)\n            {\n                case \"Numeros\":{caracter = this.generarCaracterNumerico();break;}\n                case \"Letras\": {caracter = this.generarCaracterLetra();break;}\n                case \"Combinado\": {caracter = this.generarCaracterLetraNumero();break;}\n            }\n            this.codigoSecretoAutomatico.push(caracter);\n        }\n        return this.codigoSecretoAutomatico;\n    }\n\n    generarCodigoVacioYLleno(numeroCaracteres, caracter)\n    {\n        let codigoAuxiliar = [];\n        for(var i = 0; i < numeroCaracteres; i++)\n        {\n            codigoAuxiliar.push(caracter);\n        }\n        return codigoAuxiliar;\n    }\n\n    generarCodigoSecretoPorDefault(numeroCaracteres, tipoCodigo, generarCodAut)\n    {\n        this.numeroIntentosRealizados = 0;\n        if(generarCodAut)\n        {\n            return this.generarCodigoSecretoAut(numeroCaracteres, tipoCodigo);\n        }\n        else\n        {\n            this.codigoSecretoAutomatico = this.generarCodigoVacioYLleno(numeroCaracteres, \"\")\n            return this.codigoSecretoAutomatico;\n        }\n    }\n\n    generarVacas(codigoSecreto, intentoCodigo, resultadoDeIntento)\n    {\n        for(var  intCod= 0; intCod < intentoCodigo.length; intCod++)\n        {\n            for(var codSec = 0; codSec < codigoSecreto.length; codSec++)\n            {\n                if(!this.listaRepetidos[codSec])\n                {\n                    if(codigoSecreto[codSec] == intentoCodigo[intCod])\n                    {\n                        this.listaRepetidos[codSec] = true;\n                        resultadoDeIntento[intCod] = \"V\";\n                        break;\n                    }\n                }\n            }\n        }\n        return resultadoDeIntento;\n    }\n\n    generarToros(codigoSecreto, intentoCodigo, resultadoDeIntento)\n    {\n        this.listaRepetidos = [];\n        this.numeroToros = 0;\n        this.listaRepetidos = this.generarCodigoVacioYLleno(codigoSecreto.length, false);\n        for(var  i= 0; i < intentoCodigo.length; i++)\n        {\n            if(codigoSecreto[i] == intentoCodigo[i])\n            {\n                this.listaRepetidos[i] = true;\n                resultadoDeIntento[i] = \"T\";\n                this.numeroToros++;\n            }\n        }\n        return resultadoDeIntento;\n    }\n\n    esError(resultadoIntento)\n    {\n        return typeof(resultadoIntento) == \"string\";\n    }\n\n    generarResultadoDeIntento(numeroCaracteres, resultadoIntento, codigoSecreto, intentoCodigo)\n    {\n        if(!this.esError(resultadoIntento))\n        {\n            resultadoIntento = this.generarCodigoVacioYLleno(numeroCaracteres, \"O\");\n            resultadoIntento = this.generarToros(codigoSecreto, intentoCodigo, resultadoIntento);\n            resultadoIntento = this.generarVacas(codigoSecreto, intentoCodigo, resultadoIntento);\n            this.numeroIntentosRealizados++;\n        }\n        return resultadoIntento;\n    }\n\n    generarIntentosRealizados(numeroIntentos)\n    {\n        let intentosRealizados = `${this.numeroIntentosRealizados} / ${numeroIntentos} Intentos`;\n        return intentosRealizados;\n    }\n\n    sonTodosToros(numeroCaracteres)\n    {\n        return this.numeroToros == numeroCaracteres;\n    }\n\n    seCumplioLosIntentos(numeroIntentos)\n    {\n        return this.numeroIntentosRealizados == numeroIntentos;\n    }\n\n    comprobarGanador(numeroCaracteres, numeroIntentos)\n    {\n        if(this.sonTodosToros(numeroCaracteres))\n        {\n            return \"Ganador\";\n        }\n        if(this.seCumplioLosIntentos(numeroIntentos))\n        {\n            return \"Perdedor\";\n        }\n        return \"Continua\";\n    }\n}\n\nexport default FuncionesDeJuego;\n","class ExcepcionesVacasToros\n{\n    constructor()\n    {\n        this.limiteInferior = 1;\n        this.limiteSuperior = 10;\n    }\n    \n    controlarCantidadDeCaracteres(numeroCaracteres)\n    {\n        if (numeroCaracteres < this.limiteInferior || numeroCaracteres > this.limiteSuperior)\n        {\n            numeroCaracteres = \"Número incorrecto de caracteres. Intente otra vez por favor\";\n        }\n        return numeroCaracteres;\n    }\n\n    controlarCantidadDeIntentos(numeroIntentos)\n    {\n        if (numeroIntentos < this.limiteInferior)\n        {\n            numeroIntentos = \"Número incorrecto de intentos. Intente otra vez por favor\";\n        }\n        return numeroIntentos;\n    }\n\n    esCodigoSecretoCompleto(codigoSecreto, numeroCaracteres)\n    {\n        for (var i = 0; i < numeroCaracteres; i++)\n        {\n            if(this.esCaracterVacio(codigoSecreto[i]))\n            {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    esCaracterVacio(caracter)\n    {\n        return caracter == \"\" || caracter == undefined;\n    }\n\n    esCaracterNumerico(caracter)\n    {\n        let numero = parseInt(caracter);\n        return !isNaN(numero);\n    }\n\n    esCaracterLetra(caracter)\n    {\n        let ascii = caracter.toUpperCase().charCodeAt(0);\n        return ascii > 64 && ascii < 91;\n    }\n\n    esCaracterCombinado(caracter)\n    {\n        return this.esCaracterLetra(caracter) || this.esCaracterNumerico(caracter);\n    }\n\n    esNumeroOLetra(caracter, tipoCod)\n    {\n        if(tipoCod == \"Numeros\")\n        {\n            return this.esCaracterNumerico(caracter);\n        }\n        else\n        {\n            if(tipoCod == \"Letras\")\n            {\n                return this.esCaracterLetra(caracter);\n            }\n            return this.esCaracterCombinado(caracter);\n        }\n    }\n\n    controlarTipoCaracteresCodigoSecreto(codigoSecreto, numeroCaracteres, tipoCodigo)\n    {\n        let numeroLetra;\n        for(var i = 0; i < numeroCaracteres; i++)\n        {\n            numeroLetra = this.esNumeroOLetra(codigoSecreto[i], tipoCodigo);\n            if(!numeroLetra)\n            {\n                return `Código secreto inválido. La configuración del juego es de Tipo: ${tipoCodigo}`;\n            }\n        }\n        return codigoSecreto;\n    }\n\n    controlarCodigoSecreto(codigoSecreto, numeroCaracteres, tipoCodigo)\n    {\n        if(!this.esCodigoSecretoCompleto(codigoSecreto, numeroCaracteres))\n        {\n            return \"Código secreto incompleto\";\n        }\n        return this.controlarTipoCaracteresCodigoSecreto(codigoSecreto, numeroCaracteres, tipoCodigo);\n    }\n}\n\nexport default ExcepcionesVacasToros;\n","import VacasToros from './VacasToros.js'\nimport { getVista1, getVista2, getVista2Historial , getVista3, getVista4, volverAJugar} from './vistas.js';\n\nconst formConfiguracion = document.querySelector(\"#vista-1-form\");\nconst formCodigoSecreto = document.querySelector(\"#codigo-secreto-form\");\nconst formIntentosCodigoSecreto = document.querySelector(\"#intentos-codigo-secreto-form\");\nconst formReiniciar = document.querySelector(\"#reiniciar-form\");\nconst div = document.querySelector(\"#visualizaciones\");\nconst divHistorialIntentos = document.querySelector(\"#historial-intentos\");\n\nconst inputNumeroCaracteres = document.querySelector(\"#numero-caracteres\");\nconst inputNumeroIntentos = document.querySelector(\"#numero-intentos\");\nconst inputTipoCodigo = document.querySelector(\"#tipo-codigo\");\nconst inputCodigoAutomatico = document.querySelector(\"#automatico\");\n\nlet vacasToros = new VacasToros();\nlet codigoSecreto = [];\nlet intento = [];\nlet resultadoDeIntento = [];\nlet numeroIntentosRealizados;\nlet historialIntentos = \"\";\nlet numeroCaracteres;\n\nfunction mostrarFormCodigoSecreto(numeroCar)\n{\n  let codigoSecretoDefault = vacasToros.getCodigoSecreto();\n\n  let formText = `<label for=\"codigo-1\">Código secreto: </label>`;\n  for(var i=0; i<numeroCar; i++)\n  {\n    formText += `<input type=\"text\" class=\"caracter\" size=\"1\" maxlength=\"1\" value=\"${codigoSecretoDefault[i]}\">`;\n  }\n  formText += `<input type=\"submit\" value=\"Jugar\"/>   `;\n  formCodigoSecreto.innerHTML = formText;\n}\n\nfunction limpiarVista(vista)\n{\n  switch(vista)\n  {\n    case 1:{formCodigoSecreto.innerHTML = \"\"; formConfiguracion.innerHTML = \"\"; div.innerHTML = \"\"; break;}\n    case 2:{formIntentosCodigoSecreto.innerHTML = \"\"; divHistorialIntentos.innerHTML = \"\"; div.innerHTML = \"\"; break;}\n    case 3:{formIntentosCodigoSecreto.innerHTML = \"\"; divHistorialIntentos.innerHTML = \"\"; div.innerHTML = \"\"; break;}\n    case 4:{formIntentosCodigoSecreto.innerHTML = \"\"; divHistorialIntentos.innerHTML = \"\"; div.innerHTML = \"\"; break;}\n  }\n}\n\nfunction mostrarVista(vista)\n{\n  switch(vista)\n  {\n    case 1:{formCodigoSecreto.innerHTML = getVista1(); break;}\n    case 2:{formIntentosCodigoSecreto.innerHTML = getVista2(numeroCaracteres, numeroIntentosRealizados); divHistorialIntentos.innerHTML = historialIntentos; div.innerHTML = \"\"; break;}\n    case 3:{formIntentosCodigoSecreto.innerHTML = getVista3(numeroCaracteres, numeroIntentosRealizados, codigoSecreto); divHistorialIntentos.innerHTML = historialIntentos; div.innerHTML = \"\"; formReiniciar.innerHTML = volverAJugar(); break;}\n    case 4:{formIntentosCodigoSecreto.innerHTML = getVista4(numeroCaracteres, numeroIntentosRealizados, codigoSecreto); divHistorialIntentos.innerHTML = historialIntentos; div.innerHTML = \"\"; formReiniciar.innerHTML = volverAJugar();break;}\n  }\n}\n\nfunction comprobarJuego(jugador)\n{\n  if (jugador == \"Ganador\")\n  {\n    limpiarVista(2);\n    mostrarVista(3);\n  }\n  if(jugador == \"Perdedor\")\n  {\n    limpiarVista(2);\n    mostrarVista(4);\n  }\n}\n\nformConfiguracion.addEventListener(\"submit\", (event) =>\n {\n  event.preventDefault();\n\n  numeroCaracteres = inputNumeroCaracteres.value;\n  let numeroIntentos = inputNumeroIntentos.value;\n  let tipoCodigo = inputTipoCodigo.value;\n  let codigoAutomatico = inputCodigoAutomatico.checked;\n\n  vacasToros.definirConfiguracionTotal(numeroCaracteres, numeroIntentos, tipoCodigo, codigoAutomatico);\n  mostrarFormCodigoSecreto(numeroCaracteres);\n  div.innerHTML = \"\";\n});\n\nformCodigoSecreto.addEventListener(\"submit\", (event) => \n{\n  event.preventDefault();\n  codigoSecreto = [];\n  let listaCaracteres = document.querySelectorAll(\".caracter\");\n\n  for(var i = 0; i < listaCaracteres.length; i++)\n  {\n    codigoSecreto.push(listaCaracteres[i].value);\n  }\n\n  vacasToros.definirCodigoSecreto(codigoSecreto);\n  let codigoSecretoFinal = vacasToros.getCodigoSecreto();\n\n\n  if(typeof(codigoSecretoFinal) == \"string\")\n  {\n    div.innerHTML = `<p> CÓDIGO:  ${codigoSecretoFinal}</p>`;\n  }\n  else\n  {\n    numeroIntentosRealizados = vacasToros.getIntentosRealizados();\n    limpiarVista(1);\n    mostrarVista(2);\n  }\n});\n\nformIntentosCodigoSecreto.addEventListener(\"submit\", (event) => \n{\n  event.preventDefault();\n  intento = [];\n  resultadoDeIntento = [];\n  let listaCaracteres = document.querySelectorAll(\".caracter\");\n\n  for(var i = 0; i < listaCaracteres.length; i++)\n  {\n    intento.push(listaCaracteres[i].value);\n  }\n\n  vacasToros.definirIntento(intento);\n  numeroIntentosRealizados = vacasToros.getIntentosRealizados();\n  resultadoDeIntento = vacasToros.getResultadoDeIntento();\n  let comprobarGanador = vacasToros.comprobarJuego();\n\n  if(typeof(resultadoDeIntento) == \"string\")\n  {\n    div.innerHTML = `<p> RESULTADO INTENTO:  ${resultadoDeIntento} </p>`;\n  }\n  else\n  {\n    historialIntentos = getVista2Historial(intento, resultadoDeIntento, historialIntentos, numeroCaracteres);\n    mostrarVista(2);\n  }\n  comprobarJuego(comprobarGanador);\n});\n\nformReiniciar.addEventListener(\"submit\", (event) => \n{\n  event.preventDefault();\n  location.reload();\n});\n","function getVista1()\n{\n    let vista1 = `<label for=\"numero-caracteres\">Número de Caracteres:</label>\n    <input type=\"number\" id=\"numero-caracteres\" min=\"1\" max=\"10\"/><br><br>\n    <label for=\"numero-intentos\">Número de Intentos:</label>\n    <input type=\"number\" id=\"numero-intentos\" min=\"1\" /><br><br>\n    <label for=\"tipo-codigo\">Tipo de Código:</label>\n    <select id=\"tipo-codigo\">\n        <option value=\"Numeros\">Números</option>\n        <option value=\"Letras\">Letras</option>\n        <option value=\"Combinado\">Combinado</option>\n    </select><br><br>\n    <label for=\"automatico\"> Generar Código Automático</label>\n    <input type=\"checkbox\" id=\"automatico\" value=\"si\"><br><br>\n\n    <input type=\"submit\" value=\"Aceptar\" />`;\n    return vista1;\n}\n\nfunction getVista2(numeroCar, nroIntentosRealizados)\n{\n    let vista2 = `<br><br><label for=\"codigo-1\">Código secreto: </label>`;\n    for(var i=0; i<numeroCar; i++)\n    {\n      vista2 += `<input type=\"text\" class=\"caracter\" size=\"1\" maxlength=\"1\">`;\n    }\n    vista2 += `<input type=\"submit\" value=\"Adivinar\"/><br><br>`;\n    vista2 += `<p>${nroIntentosRealizados}</p><br><br>`;\n    return vista2;\n}\n\nfunction getVista2Historial(intento, resultado, historial, numeroCar)\n{\n    for(var i=0; i<numeroCar; i++)\n    {\n        if(resultado[i] == \"V\")\n        {\n            historial += `<input style=\"background-color: gold;\" type=\"text\" class=\"car\" size=\"1\" maxlength=\"1\" value=\"${intento[i]}\">`;\n        }\n        if(resultado[i] == \"T\")\n        {\n            historial += `<input style=\"background-color: rgb(18, 235, 235);\" type=\"text\" class=\"car\" size=\"1\" maxlength=\"1\" value=\"${intento[i]}\">`;\n        }\n        if(resultado[i] == \"O\")\n        {\n            historial += `<input style=\"background-color: white;\" type=\"text\" class=\"car\" size=\"1\" maxlength=\"1\" value=\"${intento[i]}\">`;\n        }\n    }\n    historial += \"<br><br>\";\n    return historial;\n}\n\nfunction getVista3(numeroCar, nroIntentosRealizados, codigo)\n{\n    let vista3 = `<br><br><h1>GANADOR!</h1><br><br><label for=\"codigo-1\">Código secreto: </label>`;\n    for(var i=0; i<numeroCar; i++)\n    {\n      vista3 += `<input style=\"background-color: rgb(18, 235, 235); type=\"text\" class=\"caracter\" size=\"1\" maxlength=\"1\" value=\"${codigo[i]}\">`;\n    }\n    vista3 += `<p>${nroIntentosRealizados}</p><br><br>`;\n    return vista3;\n}\n\nfunction getVista4(numeroCar, nroIntentosRealizados, codigo)\n{\n    let vista4 = `<br><br><h1>PERDEDOR!</h1><br><br><label for=\"codigo-1\">Código secreto: </label>`;\n    for(var i=0; i<numeroCar; i++)\n    {\n      vista4 += `<input style=\"background-color: rgb(235, 18, 123); type=\"text\" class=\"caracter\" size=\"1\" maxlength=\"1\" value=\"${codigo[i]}\">`;\n    }\n    vista4 += `<p>${nroIntentosRealizados}</p><br><br>`;\n    return vista4;\n}\n\nfunction volverAJugar()\n{\n    let botton = `<input type=\"submit\" value=\"Volver a Jugar\"/>`;\n    return botton;\n}\n\nexport {getVista1, getVista2, getVista2Historial, getVista3, getVista4, volverAJugar}\n"],"names":["$d74219092068a106$var$_funcionesJuegoVacasToros","$d74219092068a106$var$_interopRequireDefault","parcelRequire","$d74219092068a106$var$_excepcionesVacasToros","VacasToros","$d74219092068a106$var$_classCallCheck","this","numeroCaracteres","numeroIntentos","tipoDeCodigo","generarCodigoAutomatico","intentosRealizados","codigoSecreto","intentoCodigo","resultadoDeIntento","Excepciones","ExcepcionesVacasToros","FuncionesJuego","FuncionesDeJuego","value","numeroCar","controlarCantidadDeCaracteres","numeroInt","controlarCantidadDeIntentos","tipoCod","genAutomatico","generarCodigoSecretoPorDefault","codigoSec","convertirCodigoSecretoMayusculas","controlarCodigoSecreto","generarIntentosRealizados","nroCaracteres","tipCodigo","definirNumeroDeCaracteres","definirNumeroDeIntentos","definirTipoDeCodigo","definirGeneracionDeCodigoAutomatico","definirCodigoSecretoPorDefault","definirIntentosRealizados","definirResultadoDeIntento","generarResultadoDeIntento","comprobarGanador","$862dc70cf5a09af1$var$_classCallCheck","numeroIntentosRealizados","numeroToros","codigoSecretoAutomatico","listaRepetidos","i","length","toString","toUpperCase","Math","floor","random","alphabet","generarCaracterLetra","generarCaracterNumerico","tipoCodigo","caracter","generarCaracterLetraNumero","push","codigoAuxiliar","generarCodAut","generarCodigoSecretoAut","generarCodigoVacioYLleno","intCod","codSec","resultadoIntento","esError","generarToros","generarVacas","concat","sonTodosToros","seCumplioLosIntentos","$7bdd0c65afca2cff$var$_classCallCheck","limiteInferior","limiteSuperior","esCaracterVacio","undefined","numero","parseInt","isNaN","ascii","charCodeAt","esCaracterLetra","esCaracterNumerico","esCaracterCombinado","esNumeroOLetra","esCodigoSecretoCompleto","controlarTipoCaracteresCodigoSecreto","$89b0829c857563b6$var$_VacasToros","nroIntentosRealizados","vista2","intento","resultado","historial","codigo","vista3","vista4","formConfiguracion","document","querySelector","formCodigoSecreto","formIntentosCodigoSecreto","formReiniciar","div","divHistorialIntentos","inputNumeroCaracteres","inputNumeroIntentos","inputTipoCodigo","inputCodigoAutomatico","vacasToros","historialIntentos","limpiarVista","vista","innerHTML","mostrarVista","$afd524e8fe64b7b4$exports","getVista1","getVista2","getVista3","volverAJugar","getVista4","addEventListener","event","preventDefault","codigoAutomatico","checked","definirConfiguracionTotal","codigoSecretoDefault","getCodigoSecreto","formText","mostrarFormCodigoSecreto","listaCaracteres","querySelectorAll","definirCodigoSecreto","codigoSecretoFinal","getIntentosRealizados","definirIntento","getResultadoDeIntento","jugador","comprobarJuego","getVista2Historial","location","reload"],"version":3,"file":"index.03813c79.js.map"}